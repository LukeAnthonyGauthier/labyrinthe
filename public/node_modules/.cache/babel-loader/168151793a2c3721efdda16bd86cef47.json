{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\labyrinthe\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\nconst options = {\n  nodes: {\n    shape: \"square\",\n    size: 40\n  },\n  layout: {\n    hierarchical: false,\n    randomSeed: 0\n  },\n  interaction: {\n    dragNodes: false,\n    dragView: false\n  },\n  physics: {\n    enabled: false\n  },\n  edges: {\n    color: \"#000000\",\n    arrows: {\n      to: false\n    }\n  },\n  height: \"500px\"\n};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphe = new GraphAfficher([new Node(0, 0, 0, \"green\"), new Node(1, 0, 100, \"gray\"), new Node(2, 0, 200, \"gray\"), new Node(3, 0, 300, \"gray\"), new Node(4, 0, 400, \"gray\"), new Node(5, 100, 200, \"gray\"), new Node(6, 100, 400, \"gray\"), new Node(7, 200, 0, \"gray\"), new Node(8, 200, 100, \"gray\"), new Node(9, 200, 200, \"gray\"), new Node(10, 200, 300, \"gray\"), new Node(11, 200, 400, \"gray\"), new Node(12, 200, 400, \"gray\"), new Node(13, 300, 0, \"gray\"), new Node(14, 300, 400, \"gray\"), new Node(15, 400, 0, \"gray\"), new Node(16, 400, 100, \"red\"), new Node(17, 400, 200, \"gray\"), new Node(18, 400, 300, \"gray\"), new Node(19, 400, 400, \"gray\")], [new Route(0, 1), new Route(1, 2), new Route(2, 3), new Route(3, 4), new Route(2, 5), new Route(4, 6), new Route(5, 9), new Route(6, 11), new Route(9, 8), new Route(9, 10), new Route(11, 10), new Route(8, 7), new Route(7, 13), new Route(13, 15), new Route(15, 16), new Route(12, 14), new Route(14, 19), new Route(19, 18), new Route(18, 17), new Route(17, 16)]);\n    this.state = {\n      graphe: this.graphe\n    };\n    this.fin = undefined;\n    this.fileDeNodes = [];\n  }\n\n  componentDidMount() {\n    this.fileDeNodes.push(this.state.graphe.nodes[0]); // parce que cest le premier \n\n    this.state.graphe.nodes[0].verifier = true;\n    this.fin = 16;\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    if (this.fileDeNodes.length !== 0 || this.state.graphe.nodes[this.fin] !== true) {\n      let noeud = this.fileDeNodes.shift();\n      let edgeNoeud = this.state.graphe.edges.filter(edge => edge.to === noeud.id || edge.from === noeud.id);\n      edgeNoeud.forEach(edge => {\n        if (edge.to !== noeud.id && this.graphe.nodes[edge.to].verifier !== true) {\n          this.graphe.nodes[edge.to].verifier = true;\n          this.fileDeNodes.push(this.state.graphe.nodes[edge.to]);\n        } else if (this.graphe.nodes[edge.from].verifier !== true) {\n          this.graphe.nodes[edge.from].verifier = true;\n          this.fileDeNodes.push(this.state.graphe.nodes[edge.from]);\n        }\n      });\n      console.log(edgeNoeud);\n      this.setState(prevState => ({\n        graphe: { ...prevState.graphe,\n          nodes: prevState.graphe.nodes.map(node => node.id === 1 ? { ...node,\n            color: \"blue\"\n          } : node)\n        }\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Graph, {\n      key: uuidv4(),\n      graph: this.state.graphe,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/React/labyrinthe/src/App.js"],"names":["React","Graph","v4","uuidv4","GraphAfficher","Route","Node","options","nodes","shape","size","layout","hierarchical","randomSeed","interaction","dragNodes","dragView","physics","enabled","edges","color","arrows","to","height","App","Component","constructor","props","graphe","state","fin","undefined","fileDeNodes","componentDidMount","push","verifier","timerID","setInterval","tick","componentWillUnmount","clearInterval","length","noeud","shift","edgeNoeud","filter","edge","id","from","forEach","console","log","setState","prevState","map","node","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\n\n\nconst options = {\n  nodes: {\n    shape: \"square\",\n    size: 40,\n  },\n  layout: {\n    hierarchical: false,\n    randomSeed: 0,\n  },\n  interaction: {\n    dragNodes: false,\n    dragView: false,\n  },\n  physics: {\n    enabled: false,\n  },\n  edges: {\n    color: \"#000000\",\n    arrows: {\n      to: false,\n    },\n  },\n  height: \"500px\",\n\n};\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphe = new GraphAfficher(\n      [\n        new Node(0, 0, 0, \"green\"),\n        new Node(1, 0, 100, \"gray\"),\n        new Node(2, 0, 200, \"gray\"),\n        new Node(3, 0, 300, \"gray\"),\n        new Node(4, 0, 400, \"gray\"),\n        new Node(5, 100, 200, \"gray\"),\n        new Node(6, 100, 400, \"gray\"),\n        new Node(7, 200, 0, \"gray\"),\n        new Node(8, 200, 100, \"gray\"),\n        new Node(9, 200, 200, \"gray\"),\n        new Node(10, 200, 300, \"gray\"),\n        new Node(11, 200, 400, \"gray\"),\n        new Node(12, 200, 400, \"gray\"),\n        new Node(13, 300, 0, \"gray\"),\n        new Node(14, 300, 400, \"gray\"),\n        new Node(15, 400, 0, \"gray\"),\n        new Node(16, 400, 100, \"red\"),\n        new Node(17, 400, 200, \"gray\"),\n        new Node(18, 400, 300, \"gray\"),\n        new Node(19, 400, 400, \"gray\"),\n      ],\n      [\n        new Route(0, 1),\n        new Route(1, 2),\n        new Route(2, 3),\n        new Route(3, 4),\n        new Route(2, 5),\n        new Route(4, 6),\n        new Route(5, 9),\n        new Route(6, 11),\n        new Route(9, 8),\n        new Route(9, 10),\n        new Route(11, 10),\n        new Route(8, 7),\n        new Route(7, 13),\n        new Route(13, 15),\n        new Route(15, 16),\n        new Route(12, 14),\n        new Route(14, 19),\n        new Route(19, 18),\n        new Route(18, 17),\n        new Route(17, 16),\n\n      ]\n    )\n    this.state = {\n      graphe: this.graphe\n    }\n    this.fin = undefined;\n    this.fileDeNodes = [];\n  }\n\n  componentDidMount() {\n    this.fileDeNodes.push(this.state.graphe.nodes[0])// parce que cest le premier \n    this.state.graphe.nodes[0].verifier = true;\n    this.fin = 16;\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    if (this.fileDeNodes.length !== 0 || this.state.graphe.nodes[this.fin] !== true) {\n      let noeud = this.fileDeNodes.shift();\n      let edgeNoeud = this.state.graphe.edges.filter(edge => (edge.to === noeud.id || edge.from === noeud.id));\n\n      edgeNoeud.forEach(edge => {\n        if(edge.to !== noeud.id && this.graphe.nodes[edge.to].verifier !== true){\n          this.graphe.nodes[edge.to].verifier = true\n          this.fileDeNodes.push(this.state.graphe.nodes[edge.to]);\n        }else if(this.graphe.nodes[edge.from].verifier !== true){\n          this.graphe.nodes[edge.from].verifier = true\n          this.fileDeNodes.push(this.state.graphe.nodes[edge.from]);\n        }\n      });\n\n      console.log(edgeNoeud);\n    this.setState(prevState => ({\n      graphe: {\n        ...prevState.graphe, nodes: prevState.graphe.nodes.map(node =>\n          node.id === 1\n              ? { ...node, color: \"blue\" }\n            : node\n        )\n      }\n    })); \n  }\n}\nrender() {\n  return (\n    <div>\n      <Graph\n        key={uuidv4()}\n        graph={this.state.graphe}\n        options={options}\n      />\n    </div>\n  );\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}