{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\labyrinthe\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\nconst options = {\n  nodes: {\n    shape: \"square\",\n    size: 40\n  },\n  layout: {\n    hierarchical: false,\n    randomSeed: 0\n  },\n  interaction: {\n    dragNodes: false,\n    dragView: false\n  },\n  physics: {\n    enabled: false\n  },\n  edges: {\n    color: \"#000000\",\n    arrows: {\n      to: false\n    }\n  },\n  height: \"500px\"\n};\nconst events = {};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [{\n        id: 0,\n        x: 0,\n        y: 0,\n        color: \"green\"\n      }, {\n        id: 1,\n        x: 0,\n        y: 100,\n        color: \"gray\"\n      }, {\n        id: 2,\n        x: 0,\n        y: 200,\n        color: \"gray\"\n      }, {\n        id: 3,\n        x: 0,\n        y: 300,\n        color: \"gray\"\n      }, {\n        id: 4,\n        x: 0,\n        y: 400,\n        color: \"gray\"\n      }, {\n        id: 5,\n        x: 100,\n        y: 200,\n        color: \"gray\"\n      }, {\n        id: 6,\n        x: 100,\n        y: 400,\n        color: \"gray\"\n      }, {\n        id: 7,\n        x: 200,\n        y: 0,\n        color: \"gray\"\n      }, {\n        id: 8,\n        x: 200,\n        y: 100,\n        color: \"gray\"\n      }, {\n        id: 9,\n        x: 200,\n        y: 200,\n        color: \"gray\"\n      }, {\n        id: 10,\n        x: 200,\n        y: 300,\n        color: \"gray\"\n      }, {\n        id: 11,\n        x: 200,\n        y: 400,\n        color: \"gray\"\n      }, {\n        id: 12,\n        x: 200,\n        y: 400,\n        color: \"gray\"\n      }, {\n        id: 13,\n        x: 300,\n        y: 0,\n        color: \"gray\"\n      }, {\n        id: 14,\n        x: 300,\n        y: 400,\n        color: \"gray\"\n      }, {\n        id: 15,\n        x: 400,\n        y: 0,\n        color: \"gray\"\n      }, {\n        id: 16,\n        x: 400,\n        y: 100,\n        color: \"red\"\n      }, {\n        id: 17,\n        x: 400,\n        y: 200,\n        color: \"gray\"\n      }, {\n        id: 18,\n        x: 400,\n        y: 300,\n        color: \"gray\"\n      }, {\n        id: 19,\n        x: 400,\n        y: 400,\n        color: \"gray\"\n      }],\n      edges: [{\n        from: 0,\n        to: 1\n      }, {\n        from: 1,\n        to: 2\n      }, {\n        from: 2,\n        to: 3\n      }, {\n        from: 3,\n        to: 4\n      }, {\n        from: 2,\n        to: 5\n      }, {\n        from: 4,\n        to: 6\n      }, {\n        from: 5,\n        to: 9\n      }, {\n        from: 6,\n        to: 11\n      }, {\n        from: 9,\n        to: 8\n      }, {\n        from: 9,\n        to: 10\n      }, {\n        from: 11,\n        to: 10\n      }, {\n        from: 8,\n        to: 7\n      }, {\n        from: 7,\n        to: 13\n      }, {\n        from: 13,\n        to: 15\n      }, {\n        from: 15,\n        to: 16\n      }, {\n        from: 12,\n        to: 14\n      }, {\n        from: 14,\n        to: 19\n      }, {\n        from: 19,\n        to: 18\n      }, {\n        from: 18,\n        to: 17\n      }, {\n        from: 17,\n        to: 16\n      }]\n    };\n    this.fin = undefined;\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.state.graphe.nodes[1].color = \"green\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Graph, {\n      key: uuidv4(),\n      graph: this.state.graphe,\n      options: options,\n      events: events,\n      getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/React/labyrinthe/src/App.js"],"names":["React","Graph","v4","uuidv4","GraphAfficher","Route","Node","options","nodes","shape","size","layout","hierarchical","randomSeed","interaction","dragNodes","dragView","physics","enabled","edges","color","arrows","to","height","events","App","Component","constructor","props","state","id","x","y","from","fin","undefined","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","graphe","render","network"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\n\n\nconst options = {\n  nodes: {\n    shape: \"square\",\n    size: 40,\n  },\n  layout: {\n    hierarchical: false,\n    randomSeed: 0,\n  },\n  interaction: {\n    dragNodes: false,\n    dragView: false,\n  },\n  physics: {\n    enabled: false,\n  },\n  edges: {\n    color: \"#000000\",\n    arrows: {\n      to: false,\n    },\n  },\n  height: \"500px\",\n\n};\nconst events = {};\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [\n        { id: 0, x: 0, y: 0, color: \"green\" },\n        { id: 1, x: 0, y: 100, color: \"gray\" },\n        { id: 2, x: 0, y: 200, color: \"gray\" },\n        { id: 3, x: 0, y: 300, color: \"gray\" },\n        { id: 4, x: 0, y: 400, color: \"gray\" },\n        { id: 5, x: 100, y: 200, color: \"gray\" },\n        { id: 6, x: 100, y: 400, color: \"gray\" },\n        { id: 7, x: 200, y: 0, color: \"gray\" },\n        { id: 8, x: 200, y: 100, color: \"gray\" },\n        { id: 9, x: 200, y: 200, color: \"gray\" },\n        { id: 10, x: 200, y: 300, color: \"gray\" },\n        { id: 11, x: 200, y: 400, color: \"gray\" },\n        { id: 12, x: 200, y: 400, color: \"gray\" },\n        { id: 13, x: 300, y: 0, color: \"gray\" },\n        { id: 14, x: 300, y: 400, color: \"gray\" },\n        { id: 15, x: 400, y: 0, color: \"gray\" },\n        { id: 16, x: 400, y: 100, color: \"red\" },\n        { id: 17, x: 400, y: 200, color: \"gray\" },\n        { id: 18, x: 400, y: 300, color: \"gray\" },\n        { id: 19, x: 400, y: 400, color: \"gray\" },\n      ],\n      edges: [\n        {from:0, to: 1},\n        {from:1, to: 2},\n        {from:2, to: 3},\n        {from:3, to: 4},\n        {from:2, to: 5},\n        {from:4, to: 6},\n        {from:5, to: 9},\n        {from:6, to: 11},\n        {from:9, to: 8},\n        {from:9, to: 10},\n        {from:11,to:  10},\n        {from:8, to: 7},\n        {from:7, to: 13},\n        {from:13,to:  15},\n        {from:15,to:  16},\n        {from:12,to:  14},\n        {from:14,to:  19},\n        {from:19,to:  18},\n        {from:18,to:  17},\n        {from:17,to:  16},\n\n      ]\n    }\n    this.fin = undefined;\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n\n    this.state.graphe.nodes[1].color = \"green\";\n\n\n  }\n  render() {\n    return (\n      <div>\n        <Graph\n          key={uuidv4()}\n          graph={this.state.graphe}\n          options={options}\n          events={events}\n          getNetwork={(network) => {\n            //  if you want access to vis.js network api you can set the state in a parent component using this property\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}