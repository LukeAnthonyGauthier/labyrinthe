{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\labyrinthe\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ReactDOM from 'react-dom'; // you used 'react-dom' as 'ReactDOM'\n\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\ni;\nconst options = {\n  nodes: {\n    shape: \"square\",\n    size: 40\n  },\n  layout: {\n    hierarchical: false,\n    randomSeed: 0\n  },\n  interaction: {\n    dragNodes: true,\n    dragView: true\n  },\n  physics: {\n    enabled: false\n  },\n  edges: {\n    color: \"#000000\",\n    arrows: {\n      to: false\n    }\n  },\n  height: \"500px\"\n};\nconst events = {};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graph = new GraphAfficher([new Node(0, 0, 0, \"green\"), new Node(1, 0, 100, \"gray\"), new Node(2, 0, 200, \"gray\"), new Node(3, 0, 300, \"gray\"), new Node(4, 0, 400, \"gray\"), new Node(5, 100, 200, \"gray\"), new Node(6, 100, 400, \"gray\"), new Node(7, 200, 0, \"gray\"), new Node(8, 200, 100, \"gray\"), new Node(9, 200, 200, \"gray\"), new Node(10, 200, 300, \"gray\"), new Node(11, 200, 400, \"gray\"), new Node(12, 200, 400, \"gray\"), new Node(13, 300, 0, \"gray\"), new Node(14, 300, 400, \"gray\"), new Node(15, 400, 0, \"gray\"), new Node(16, 400, 100, \"red\"), new Node(17, 400, 200, \"gray\"), new Node(18, 400, 300, \"gray\"), new Node(19, 400, 400, \"gray\")], [new Route(0, 1), new Route(1, 2), new Route(2, 3), new Route(3, 4), new Route(2, 5), new Route(4, 6), new Route(4, 6), new Route(5, 9), new Route(6, 11), new Route(9, 8), new Route(9, 10), new Route(11, 10), new Route(8, 7), new Route(7, 13), new Route(13, 15), new Route(15, 16), new Route(12, 14), new Route(14, 19), new Route(19, 18), new Route(18, 17), new Route(17, 16)]);\n    this.state = {\n      graph: this.graph\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      graph: this.state.graph.nodes[1].color = \"bleu\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Graph, {\n      key: uuidv4(),\n      graph: this.state.graph,\n      options: options,\n      events: events,\n      getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/React/labyrinthe/src/App.js"],"names":["React","Graph","v4","uuidv4","ReactDOM","GraphAfficher","Route","Node","i","options","nodes","shape","size","layout","hierarchical","randomSeed","interaction","dragNodes","dragView","physics","enabled","edges","color","arrows","to","height","events","App","Component","constructor","props","graph","state","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","network","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAAkC;;AAClC,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACAC,CAAC;AAED,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,QADF;AAELC,IAAAA,IAAI,EAAE;AAFD,GADO;AAKdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE,KADR;AAENC,IAAAA,UAAU,EAAE;AAFN,GALM;AASdC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,IADA;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GATC;AAadC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAbK;AAgBdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAE;AADE;AAFH,GAhBO;AAsBdC,EAAAA,MAAM,EAAE;AAtBM,CAAhB;AAyBA,MAAMC,MAAM,GAAG,EAAf;AAEA,eAAe,MAAMC,GAAN,SAAkB3B,KAAK,CAAC4B,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,IAAI1B,aAAJ,CACX,CACE,IAAIE,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,OAAlB,CADF,EAEE,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,MAApB,CAFF,EAGE,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,MAApB,CAHF,EAIE,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,MAApB,CAJF,EAKE,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,MAApB,CALF,EAME,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,MAAtB,CANF,EAOE,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,MAAtB,CAPF,EAQE,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,MAApB,CARF,EASE,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,MAAtB,CATF,EAUE,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,MAAtB,CAVF,EAWE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CAXF,EAYE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CAZF,EAaE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CAbF,EAcE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,CAAlB,EAAqB,MAArB,CAdF,EAeE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CAfF,EAgBE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,CAAlB,EAAqB,MAArB,CAhBF,EAiBE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,KAAvB,CAjBF,EAkBE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CAlBF,EAmBE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CAnBF,EAoBE,IAAIA,IAAJ,CAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,MAAvB,CApBF,CADW,EAuBX,CACE,IAAID,KAAJ,CAAU,CAAV,EAAa,CAAb,CADF,EAEE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAFF,EAGE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAHF,EAIE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAJF,EAKE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CALF,EAME,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CANF,EAOE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAPF,EAQE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CARF,EASE,IAAIA,KAAJ,CAAU,CAAV,EAAa,EAAb,CATF,EAUE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAVF,EAWE,IAAIA,KAAJ,CAAU,CAAV,EAAa,EAAb,CAXF,EAYE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CAZF,EAaE,IAAIA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAbF,EAcE,IAAIA,KAAJ,CAAU,CAAV,EAAa,EAAb,CAdF,EAeE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CAfF,EAgBE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CAhBF,EAiBE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CAjBF,EAkBE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CAlBF,EAmBE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CAnBF,EAoBE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CApBF,EAqBE,IAAIA,KAAJ,CAAU,EAAV,EAAc,EAAd,CArBF,CAvBW,CAAb;AAgDA,SAAK0B,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,KAAKA;AADD,KAAb;AAID;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKG,QAAL,CAAc;AACVR,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBrB,KAAjB,CAAuB,CAAvB,EAA0BY,KAA1B,GAAgC;AAD7B,KAAd;AAGD;;AACDkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAErC,MAAM,EADb;AAEE,MAAA,KAAK,EAAE,KAAK6B,KAAL,CAAWD,KAFpB;AAGE,MAAA,OAAO,EAAEtB,OAHX;AAIE,MAAA,MAAM,EAAEiB,MAJV;AAKE,MAAA,UAAU,EAAGe,OAAD,IAAa,CACvB;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AAvF8C;AAyFjDrC,QAAQ,CAACoC,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ReactDOM from 'react-dom'; // you used 'react-dom' as 'ReactDOM'\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\ni\n\nconst options = {\n  nodes: {\n    shape: \"square\",\n    size: 40,\n  },\n  layout: {\n    hierarchical: false,\n    randomSeed: 0,\n  },\n  interaction: {\n    dragNodes: true,\n    dragView: true,\n  },\n  physics: {\n    enabled: false,\n  },\n  edges: {\n    color: \"#000000\",\n    arrows: {\n      to: false,\n    },\n  },\n  height: \"500px\",\n\n};\nconst events = {};\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graph = new GraphAfficher(\n      [\n        new Node(0, 0, 0, \"green\"),\n        new Node(1, 0, 100, \"gray\"),\n        new Node(2, 0, 200, \"gray\"),\n        new Node(3, 0, 300, \"gray\"),\n        new Node(4, 0, 400, \"gray\"),\n        new Node(5, 100, 200, \"gray\"),\n        new Node(6, 100, 400, \"gray\"),\n        new Node(7, 200, 0, \"gray\"),\n        new Node(8, 200, 100, \"gray\"),\n        new Node(9, 200, 200, \"gray\"),\n        new Node(10, 200, 300, \"gray\"),\n        new Node(11, 200, 400, \"gray\"),\n        new Node(12, 200, 400, \"gray\"),\n        new Node(13, 300, 0, \"gray\"),\n        new Node(14, 300, 400, \"gray\"),\n        new Node(15, 400, 0, \"gray\"),\n        new Node(16, 400, 100, \"red\"),\n        new Node(17, 400, 200, \"gray\"),\n        new Node(18, 400, 300, \"gray\"),\n        new Node(19, 400, 400, \"gray\"),\n      ],\n      [\n        new Route(0, 1),\n        new Route(1, 2),\n        new Route(2, 3),\n        new Route(3, 4),\n        new Route(2, 5),\n        new Route(4, 6),\n        new Route(4, 6),\n        new Route(5, 9),\n        new Route(6, 11),\n        new Route(9, 8),\n        new Route(9, 10),\n        new Route(11, 10),\n        new Route(8, 7),\n        new Route(7, 13),\n        new Route(13, 15),\n        new Route(15, 16),\n        new Route(12, 14),\n        new Route(14, 19),\n        new Route(19, 18),\n        new Route(18, 17),\n        new Route(17, 16),\n\n      ]\n    )\n    this.state = {\n      graph: this.graph\n\n    }\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);  \n  }\n\n  tick() {\n    this.setState({\n        graph: this.state.graph.nodes[1].color=\"bleu\",\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Graph\n          key={uuidv4()}\n          graph={this.state.graph}\n          options={options}\n          events={events}\n          getNetwork={(network) => {\n            //  if you want access to vis.js network api you can set the state in a parent component using this property\n          }}\n        />\n      </div>\n    );  \n  }\n} \nReactDOM.render(\n  <App />,  \n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}