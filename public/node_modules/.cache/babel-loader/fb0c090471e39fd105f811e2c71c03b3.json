{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\labyrinthe\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport \"./App.css\";\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  let nodes = [];\n  let routes;\n  let graph = new GraphAfficher(nodes = [new Node(0, 0, 0, \"green\"), new Node(1, 0, 100, \"gray\"), new Node(2, 0, 200, \"gray\"), new Node(3, 0, 300, \"gray\"), new Node(4, 0, 400, \"gray\"), new Node(5, 100, 200, \"gray\"), new Node(6, 100, 400, \"gray\"), new Node(7, 200, 0, \"gray\"), new Node(8, 200, 100, \"gray\"), new Node(9, 200, 200, \"gray\"), new Node(10, 200, 300, \"gray\"), new Node(11, 200, 400, \"gray\"), new Node(12, 200, 400, \"gray\"), new Node(13, 300, 0, \"gray\"), new Node(14, 300, 400, \"gray\"), new Node(15, 400, 0, \"gray\"), new Node(16, 400, 100, \"red\"), new Node(17, 400, 200, \"gray\"), new Node(18, 400, 300, \"gray\"), new Node(19, 400, 400, \"gray\")], routes = [new Route(0, 1), new Route(1, 2), new Route(2, 3), new Route(3, 4), new Route(2, 5), new Route(4, 6), new Route(4, 6), new Route(5, 9), new Route(6, 11), new Route(9, 8), new Route(9, 10), new Route(11, 10), new Route(8, 7), new Route(7, 13), new Route(13, 15), new Route(15, 16), new Route(12, 14), new Route(14, 19), new Route(19, 18), new Route(18, 17), new Route(17, 16)]);\n\n  function componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  function tick() {\n    this.setState({});\n  }\n\n  const options = {\n    nodes: {\n      shape: \"square\",\n      size: 40\n    },\n    layout: {\n      hierarchical: false,\n      randomSeed: 0\n    },\n    interaction: {\n      dragNodes: true,\n      dragView: true\n    },\n    physics: {\n      enabled: false\n    },\n    edges: {\n      color: \"#000000\",\n      arrows: {\n        to: false\n      }\n    },\n    height: \"500px\"\n  };\n  const events = {};\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    key: uuidv4(),\n    graph: graph,\n    options: options,\n    events: events,\n    getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/React/labyrinthe/src/App.js"],"names":["React","Graph","GraphAfficher","Route","Node","v4","uuidv4","App","nodes","routes","graph","componentDidMount","timerID","setInterval","tick","setState","options","shape","size","layout","hierarchical","randomSeed","interaction","dragNodes","dragView","physics","enabled","edges","color","arrows","to","height","events","network"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport \"./App.css\";\nimport GraphAfficher from \"./class/graph\";\nimport Route from \"./class/route\";\nimport Node from \"./class/node\";\nimport { v4 as uuidv4 } from \"uuid\";\nfunction App() {\n  let nodes = [];\n  let routes;\n  let graph = new GraphAfficher(\n    nodes = [\n      new Node(0, 0, 0 , \"green\"),\n      new Node(1, 0, 100, \"gray\"),\n      new Node(2, 0, 200, \"gray\"),\n      new Node(3, 0, 300, \"gray\"),\n      new Node(4, 0, 400, \"gray\"),\n      new Node(5, 100, 200, \"gray\"),\n      new Node(6, 100, 400, \"gray\"),\n      new Node(7, 200, 0, \"gray\"),\n      new Node(8, 200, 100, \"gray\"),\n      new Node(9, 200, 200, \"gray\"),\n      new Node(10, 200, 300, \"gray\"),\n      new Node(11, 200, 400, \"gray\"),\n      new Node(12, 200, 400, \"gray\"),\n      new Node(13, 300, 0, \"gray\"),\n      new Node(14, 300, 400, \"gray\"),\n      new Node(15, 400, 0, \"gray\"),\n      new Node(16, 400, 100, \"red\"),\n      new Node(17, 400, 200, \"gray\"),\n      new Node(18, 400, 300, \"gray\"),\n      new Node(19, 400, 400, \"gray\"),\n    ],\n    routes = [\n      new Route(0, 1),\n      new Route(1, 2),\n      new Route(2, 3),\n      new Route(3, 4),\n      new Route(2, 5),\n      new Route(4, 6),\n      new Route(4, 6),\n      new Route(5, 9),\n      new Route(6, 11),\n      new Route(9, 8),\n      new Route(9, 10),\n      new Route(11, 10),\n      new Route(8, 7),\n      new Route(7, 13),\n      new Route(13, 15),\n      new Route(15, 16),\n      new Route(12, 14),\n      new Route(14, 19),\n      new Route(19, 18),\n      new Route(18, 17),\n      new Route(17, 16),\n\n    ]\n  )\n  function componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n  function tick(){    \n    this.setState({    \n    \n    });  \n  }\n  const options = {\n    nodes: {\n      shape: \"square\",\n      size: 40,\n    },\n    layout: {\n      hierarchical: false,\n      randomSeed: 0,\n    },\n    interaction: {\n      dragNodes: true,\n      dragView: true,\n    },\n    physics: {\n      enabled: false,\n    },\n    edges: {\n      color: \"#000000\",\n      arrows: {\n        to: false,\n      },\n    },\n    height: \"500px\",\n\n  };\n  const events = {};\n  return (\n\n    <div>\n      <Graph\n        key={uuidv4()}\n        graph={graph}\n        options={options}\n        events={events}\n        getNetwork={(network) => {\n          //  if you want access to vis.js network api you can set the state in a parent component using this property\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}